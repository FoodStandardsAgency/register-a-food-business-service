name: Release
run-name: Release (${{ github.ref_name  }})
on:
  workflow_dispatch:
  push:
    branches:
      - "release/**"
      - "hotfix/**"

jobs:
  build_and_test:
    name: Build & test
    uses: ./.github/workflows/build_and_test.yml

  deploy_to_staging:
    name: Deploy to Staging
    needs: build_and_test
    uses: ./.github/workflows/deploy.yml
    with:
      environment: staging
    secrets: inherit
  
  component_e2e_tests:
    name: Component, E2E tests
    runs-on: ubuntu-latest
    needs: deploy_to_staging
    environment: staging
    env:
      ENVIRONMENT_DESCRIPTION: staging
      FRONT_END_NAME: register-a-food-business-front-end
      FRONT_END_SECRET: ${{ secrets.FRONT_END_SECRET }}
      DIRECT_API_NAME: register-a-food-business-apim
      DIRECT_API_SECRET: ${{ secrets.DIRECT_API_SECRET }}
      
    steps:
      - name: Use Node.js 16.15
        uses: actions/setup-node@v3
        with:
          node-version: 16.15
      
      - name: Npm version
        run: npm -v
        
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: build
          
      - name: unzip artifact for tests
        run: unzip build.zip
        
      - name: Install
        run: npm install
        
      - name: Component Tests
        run: npm run test:submissions:component:ci

      - name: Publish Component Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: ./reports/TEST-component.xml
          check_name: "Component Test Results"
          
      - name: E2E Tests
        run: npm run test:submissions:api:e2e

      - name: Publish E2E Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: ./reports/TEST-undefined.xml
          check_name: "E2E Test Results"

  deploy_to_production:
    name: Deploy to Production
    needs: [component_e2e_tests]
    uses: ./.github/workflows/deploy.yml
    with:
      environment: production
    secrets: inherit

  deploy_to_onboarding:
    name: Deploy to Onboarding
    needs: [component_e2e_tests]
    uses: ./.github/workflows/deploy.yml
    with:
      environment: onboarding
    secrets: inherit

  deploy_to_staging_collections:
    name: Deploy to Staging Collections
    needs: build_and_test
    uses: ./.github/workflows/deploy.yml
    with:
      environment: staging-collections
    secrets: inherit
    
  collections_component_e2e_tests:
    name: Collections. Component, E2E tests   
    runs-on: ubuntu-latest
    needs: [deploy_to_staging_collections]
    environment: staging-collections
    env:
      ENVIRONMENT_DESCRIPTION: staging
      NODE_ENV: development
      SERVICE_BASE_URL: https://staging-register-a-food-business-service.azurewebsites.net
      API_SECRET: ${{ secrets.API_SECRET }}
      COMPONENT_TEST_BASE_URL: https://staging-register-a-food-business-collections-service.azurewebsites.net
      FRONT_END_NAME: register-a-food-business-front-end
      FRONT_END_SECRET: ${{ secrets.FRONT_END_SECRET }}
      DIRECT_API_NAME: register-a-food-business-apim
      DIRECT_API_SECRET: ${{ secrets.DIRECT_API_SECRET }}
      
    steps:
      - name: Use Node.js 16.15
        uses: actions/setup-node@v3
        with:
          node-version: 16.15
      
      - name: Npm version
        run: npm -v
        
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: build
          
      - name: unzip artifact for tests
        run: unzip build.zip
        
      - name: Install
        run: npm install
      
      - name: Log into Azure CLI with service principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Open firewall
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            export IPADDR=$(curl ipinfo.io/ip)
            echo "Opening firewall on app service: $IPADDR"
            az webapp config access-restriction add -g rg-app-prd-spoke-rafb-01 -n staging-register-a-food-business-collections-service --rule-name TemporaryDevOpsAccess --action Allow --ip-address $IPADDR/32 --priority 95
          
      - name: Collections Component Tests
        run: npm run test:collections:component:ci

      - name: Publish Collections Component Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: ./reports/TEST-component.xml
          check_name: "Collections Component Test Results"
          
      - name: Collections E2E Tests
        run: npm run test:collections:api:e2e

      - name: Publish Collections E2E Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: ./reports/TEST-undefined.xml
          check_name: "Collections E2E Test Results"
          
      - name: Close firewall
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            export IPADDR=$(curl ipinfo.io/ip)
            echo "Closing firewall on app service: $IPADDR"
            az webapp config access-restriction remove -g rg-app-prd-spoke-rafb-01 -n staging-register-a-food-business-collections-service --rule-name TemporaryDevOpsAccess
          
  deploy_to_production_collections:
    name: Deploy to Production Collections
    needs: [collections_component_e2e_tests]
    uses: ./.github/workflows/deploy.yml
    with:
      environment: production-collections
    secrets: inherit

  deploy_to_onboarding_collections:
    name: Deploy to Onboarding Collections
    needs: [collections_component_e2e_tests]
    uses: ./.github/workflows/deploy.yml
    with:
      environment: onboarding-collections
    secrets: inherit

  
