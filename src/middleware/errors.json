[
  {
    "name": "tascomiAuth",
    "code": "1",
    "developerMessage":
      "Authentication with Tascomi API failed, have you supplied the application with the correct keys?",
    "userMessages": "",
    "statusCode": 500
  },
  {
    "name": "tascomiRefNumber",
    "code": "2",
    "developerMessage": "Tascomi ref number creation failed",
    "userMessages": "",
    "statusCode": 500
  },
  {
    "name": "validationError",
    "code": "3",
    "developerMessage":
      "Validation error, check request body vs validation schema",
    "userMessages": "",
    "statusCode": 400
  },
  {
    "name": "SequelizeConnectionError",
    "code": "4",
    "developerMessage":
      "Could not make connection to Sequelize, check authentication rules on database and credentials provided to app",
    "userMessages": "",
    "statusCode": 500
  },
  {
    "name": "notifyMissingKey",
    "code": "5",
    "developerMessage":
      "Key for notify service missing, check credentials provided to app",
    "userMessages": "",
    "statusCode": 500
  },
  {
    "name": "notifyInvalidTemplate",
    "code": "6",
    "developerMessage":
      "Notify template ID is not valid, check credentials provided to app. Raw error:",
    "userMessages": "",
    "statusCode": 500
  },
  {
    "name": "notifyMissingPersonalisation",
    "code": "7",
    "developerMessage":
      "Notify personalisation is missing, check data sent to Notify API. Raw error:",
    "userMessages": "",
    "statusCode": 500
  },
  {
    "name": "clientSecretNotFound",
    "code": "8",
    "developerMessage": "Client secret not found",
    "userMessages": "",
    "statusCode": 403
  },
  {
    "name": "clientNotFound",
    "code": "9",
    "developerMessage": "Client not found",
    "userMessages": "",
    "statusCode": 403
  },
  {
    "name": "clientNotSupported",
    "code": "10",
    "developerMessage": "Client not supported",
    "userMessages": "",
    "statusCode": 403
  },
  {
    "name": "secretInvalid",
    "code": "11",
    "developerMessage": "Secret is invalid",
    "userMessages": "",
    "statusCode": 403
  },
  {
    "name": "mongoConnectionError",
    "code": "12",
    "developerMessage":
      "MongoDB (Azure CosmosDB) connection failed, check credentials provided to app and status of database. Raw error:",
    "userMessages": "",
    "statusCode": 500
  },
  {
    "name": "localCouncilNotFound",
    "code": "13",
    "developerMessage":
      "The local council url has not matched any records in the config database. Raw error:",
    "userMessages": "",
    "statusCode": 400
  }
]
